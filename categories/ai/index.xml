<rss version="2.0">
  <channel>
    <title>AI on Alexander Kucera</title>
    <link>https://alexanderkucera.com/categories/ai/</link>
    <description></description>
    
    <language>de</language>
    
    <lastBuildDate>Thu, 31 Jul 2025 07:49:00 +0200</lastBuildDate>
    
    <item>
      <title>Rate Limits: The Unlikely Hero of Developer Wellness</title>
      <link>https://alexanderkucera.com/2025/07/31/rate-limits-the-unlikely-hero.html</link>
      <pubDate>Thu, 31 Jul 2025 07:49:00 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/07/31/rate-limits-the-unlikely-hero.html</guid>
      <description>&lt;p&gt;I have to admit something embarrassing. I&amp;rsquo;ve become addicted to vibe coding.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s something magical about having all the projects you can think of at your fingertips. Need a quick script? Done. Want to prototype that wild idea? Ready in minutes. Complex refactoring that would take hours? The AI handles it while I grab coffee.&lt;/p&gt;
&lt;p&gt;But here&amp;rsquo;s the thing. Rate limits hit. The magic stops. And I get annoyed.&lt;/p&gt;
&lt;p&gt;Then I realized something. These rate limits might actually be saving me.&lt;/p&gt;
&lt;h2 id=&#34;the-vibe-coding-addiction&#34;&gt;The Vibe Coding Addiction&lt;/h2&gt;
&lt;p&gt;Vibe coding changes everything about programming. Instead of wrestling with syntax, you describe what you want. The AI translates your intentions into working code. It&amp;rsquo;s programming at the speed of thought.&lt;/p&gt;
&lt;p&gt;Research shows this creates what psychologists call a &amp;ldquo;flow state.&amp;rdquo; That deep immersion where creativity peaks and time disappears. You&amp;rsquo;re not debugging semicolons. You&amp;rsquo;re orchestrating solutions.&lt;/p&gt;
&lt;p&gt;The barrier to building drops to almost zero. Got an idea? Start talking to the AI. Within minutes, you have working code. The dopamine hit is immediate and powerful.&lt;/p&gt;
&lt;p&gt;No wonder we get hooked.&lt;/p&gt;
&lt;p&gt;But flow states have a dark side. Time becomes elastic. Hours pass like minutes. You forget to eat, drink, or move. The outside world fades away.&lt;/p&gt;
&lt;h2 id=&#34;the-hidden-health-crisis&#34;&gt;The Hidden Health Crisis&lt;/h2&gt;
&lt;p&gt;Extended coding sessions wreck your body. We know this. Stiff neck, sore back, dry eyes. The usual suspects.&lt;/p&gt;
&lt;p&gt;But vibe coding makes it worse. Traditional coding has natural break points. Compilation errors. Syntax mistakes. Research breaks. These interruptions force micro-recoveries.&lt;/p&gt;
&lt;p&gt;Vibe coding removes those friction points. The AI handles the syntax. Debugging becomes conversation. You can code for hours without hitting a wall.&lt;/p&gt;
&lt;p&gt;Your brain doesn&amp;rsquo;t get those crucial rest moments. Cognitive overload builds. Decision fatigue sets in. You start making worse choices even as you feel more productive.&lt;/p&gt;
&lt;p&gt;Studies on developer wellness are clear. Regular breaks aren&amp;rsquo;t optional. They&amp;rsquo;re essential for both physical and mental health. The Pomodoro Technique exists for good reason.&lt;/p&gt;
&lt;p&gt;But when the AI makes everything feel effortless, who thinks about breaks?&lt;/p&gt;
&lt;h2 id=&#34;rate-limits-as-accidental-wellness-features&#34;&gt;Rate Limits as Accidental Wellness Features&lt;/h2&gt;
&lt;p&gt;This is where rate limits become heroes in disguise.&lt;/p&gt;
&lt;p&gt;That frustrating message? &amp;ldquo;You&amp;rsquo;ve reached your rate limit. Try again later.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;It forces you to stop. Step away. Move around. Let your brain relax.&lt;/p&gt;
&lt;p&gt;I used to curse these interruptions. Now I see them differently. They&amp;rsquo;re mandatory wellness breaks. Digital interventions preventing coding binges.&lt;/p&gt;
&lt;p&gt;For me, with my health condition, these forced breaks are especially crucial. I need that movement. That mental reset. Without rate limits, I&amp;rsquo;d code myself into a hole.&lt;/p&gt;
&lt;p&gt;The AI companies probably didn&amp;rsquo;t design rate limits for our health. They&amp;rsquo;re managing server costs and preventing abuse. But the side effect is profound.&lt;/p&gt;
&lt;p&gt;They&amp;rsquo;re protecting us from ourselves.&lt;/p&gt;
&lt;h2 id=&#34;the-productivity-paradox&#34;&gt;The Productivity Paradox&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s the kicker. Recent research found that experienced developers using AI tools actually showed 19% decreased productivity on complex projects. Despite feeling 20% more productive.&lt;/p&gt;
&lt;p&gt;We think we&amp;rsquo;re coding faster. But we&amp;rsquo;re not. The AI creates an illusion of speed while introducing subtle inefficiencies.&lt;/p&gt;
&lt;p&gt;Rate limits might be saving us from more than burnout. They might be saving us from counterproductive coding sessions that feel amazing but deliver less value.&lt;/p&gt;
&lt;p&gt;Those forced pauses give us time to reflect. Is this code actually better? Am I solving the right problem? Sometimes the answer is no.&lt;/p&gt;
&lt;h2 id=&#34;embracing-the-pause&#34;&gt;Embracing the Pause&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m learning to reframe rate limits. Instead of obstacles, they&amp;rsquo;re features. Built-in wisdom from systems that know we can&amp;rsquo;t self-regulate.&lt;/p&gt;
&lt;p&gt;But we shouldn&amp;rsquo;t rely only on external limits. We need internal boundaries too.&lt;/p&gt;
&lt;p&gt;Set timers. Take real breaks. Go for walks. Talk to humans. Remember the world beyond the screen exists.&lt;/p&gt;
&lt;p&gt;The AI will wait. Your projects will survive. Your health won&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Rate limits aren&amp;rsquo;t just about server resources. They&amp;rsquo;re about human resources. Your energy, focus, and wellbeing.&lt;/p&gt;
&lt;p&gt;They&amp;rsquo;re reminders that even in our AI-powered future, we&amp;rsquo;re still human. We still need rest, movement, and connection.&lt;/p&gt;
&lt;p&gt;So next time you hit a rate limit, don&amp;rsquo;t curse it. Thank it.&lt;/p&gt;
&lt;p&gt;It might just be saving your life.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;What&amp;rsquo;s your relationship with AI coding tools? Do you find them addictive? How do you maintain healthy coding habits? I&amp;rsquo;d love to hear your thoughts.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Unintended Side Effect of Vibe Coding</title>
      <link>https://alexanderkucera.com/2025/07/26/the-unintended-side-effect-of.html</link>
      <pubDate>Sat, 26 Jul 2025 06:12:13 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/07/26/the-unintended-side-effect-of.html</guid>
      <description>&lt;h1 id=&#34;the-vibe-coding-project-explosion&#34;&gt;The Vibe Coding Project Explosion&lt;/h1&gt;
&lt;p&gt;I didn&amp;rsquo;t expect this. Vibe coding had an unintended side effect. Blasting through little coding projects has lead to a creative influx. Now my project todo list is growing exponentially. With every project I do, two more project ideas come to mind. What was my list of growing issues on one project before is now a growing list of actual projects I want to do.&lt;/p&gt;
&lt;p&gt;This isn&amp;rsquo;t just me being scattered. There&amp;rsquo;s actually psychology behind this phenomenon. Creative momentum breeds more creativity. When you complete projects quickly and see tangible results, your brain gets addicted to that success feeling. Each finished project exposes new possibilities. You spot connections you never saw before. Suddenly every problem looks solvable. It&amp;rsquo;s like intellectual curiosity breeding more curiosity. The more you learn, the more you realize you don&amp;rsquo;t know.&lt;/p&gt;
&lt;p&gt;This is actually a good problem to have. Most people struggle with finding project ideas, not managing too many. But it&amp;rsquo;s still a problem. Analysis paralysis kicks in when you have fifty exciting projects and only twenty-four hours in a day. Your todo list becomes this overwhelming beast. You start feeling guilty about all the cool stuff you&amp;rsquo;re not building.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what I&amp;rsquo;m learning about handling this creative overflow. Brain dump everything. Don&amp;rsquo;t keep ideas in your head. Write them down immediately. Use whatever works - notes app, paper, voice memos. One focus project at a time. This is the hardest part. Pick one project and ignore the rest until it&amp;rsquo;s done. Use the parking lot method. Keep a separate list for &amp;ldquo;someday maybe&amp;rdquo; projects. Review it monthly, but don&amp;rsquo;t let it distract from your current focus. Accept that most ideas will die. Not every idea needs to become reality. Some are just your brain playing with possibilities.&lt;/p&gt;
&lt;p&gt;The truth is, I&amp;rsquo;m not going to stop this creative explosion. It feels too good to solve problems quickly and see immediate results. But I am getting better at managing it. The key is channeling that creative energy without drowning in it. If you&amp;rsquo;re experiencing the same thing, you&amp;rsquo;re not alone. It&amp;rsquo;s what happens when you taste the power of rapid iteration and creative problem-solving. Just remember - finishing one great project beats starting ten mediocre ones.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Now excuse me while I add three more project ideas to my parking lot list.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article was written with the help of Claude and my own experience with the beautiful chaos of vibe coding.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/07/17/remember-that-say-that-the.html</link>
      <pubDate>Thu, 17 Jul 2025 19:42:53 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/07/17/remember-that-say-that-the.html</guid>
      <description>&lt;p&gt;Remember that say that the last 20% take 80% of the time. It feels like I’m stuck in those last 20% with my refactoring efforts. I want it to be over, but it’ll probably be two or three more days. 😮‍💨&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/07/16/four-the-last-four-days.html</link>
      <pubDate>Wed, 16 Jul 2025 14:37:29 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/07/16/four-the-last-four-days.html</guid>
      <description>&lt;p&gt;Four the last four days I have been in the middle of a major refactor of Links. I am starting to see light at the end of the tunnel. When I am finished, the code will be lean, mean and hardened (and much more maintainable).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vibe Coding Isn&#39;t Code Slop - It&#39;s Strategic Collaboration</title>
      <link>https://alexanderkucera.com/2025/07/14/vibe-coding-isnt-code-slop.html</link>
      <pubDate>Mon, 14 Jul 2025 10:51:00 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/07/14/vibe-coding-isnt-code-slop.html</guid>
      <description>&lt;p&gt;For anyone thinking &amp;ldquo;vibe coding&amp;rdquo; results in bad quality code or code slop, let me set the record straight.&lt;/p&gt;
&lt;p&gt;I spend about 50-70% of my vibe coding time refactoring and running code reviews to make sure everything is up to snuff. I could easily skip that step and have something that &lt;em&gt;just&lt;/em&gt; works. But my standards are higher than that.&lt;/p&gt;
&lt;p&gt;The misconception comes from people who think vibe coding means throwing prompts at an LLM and calling it a day. That&amp;rsquo;s not vibe coding. That&amp;rsquo;s just being lazy.&lt;/p&gt;
&lt;h2 id=&#34;what-vibe-coding-actually-means&#34;&gt;What Vibe Coding Actually Means&lt;/h2&gt;
&lt;p&gt;To me, vibe coding is more akin to being the designer or product manager while the LLM is the coder. I give it a task and once it&amp;rsquo;s done, I review the task and give it corrections and suggestions on how to improve the code and what to do next.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s never about set and forget. It&amp;rsquo;s strictly about increased productivity and accessing a knowledge base that knows more about coding than I will ever have.&lt;/p&gt;
&lt;p&gt;Think about it this way: when you work with a junior developer, you don&amp;rsquo;t just hand them a task and walk away. You review their work, provide feedback, suggest improvements, and guide them through iterations. The same principle applies to working with LLMs.&lt;/p&gt;
&lt;p&gt;The difference? The LLM has access to patterns and solutions from millions of codebases. But it still needs human oversight to ensure quality and context.&lt;/p&gt;
&lt;h2 id=&#34;my-actual-workflow&#34;&gt;My Actual Workflow&lt;/h2&gt;
&lt;p&gt;Let me get specific about how this works in practice. I mainly use Claude Code, and I have it set to planning mode for most of my inputs until I&amp;rsquo;m happy with the plan Claude comes up with. Only then do I allow it to execute the plan.&lt;/p&gt;
&lt;p&gt;This two-stage process is crucial. Instead of jumping straight into code generation, Claude first presents a detailed plan of what it intends to do. I can review the approach, suggest modifications, point out potential issues, or redirect entirely before a single line of code gets written.&lt;/p&gt;
&lt;p&gt;This planning phase catches problems early. Maybe Claude misunderstood a requirement. Maybe there&amp;rsquo;s a better architectural approach. Maybe it&amp;rsquo;s missing a critical edge case. Catching these issues in the planning stage saves massive amounts of time later.&lt;/p&gt;
&lt;p&gt;I also use an MCP server called &lt;a href=&#34;https://github.com/PV-Bhat/vibe-check-mcp-server/tree/main&#34;&gt;Vibe Check&lt;/a&gt; and have Claude check against it regularly. It really helps to keep Claude on track throughout the development process.&lt;/p&gt;
&lt;p&gt;The Vibe Check server acts like a continuous validation system. It helps ensure that Claude stays aligned with my coding standards and project requirements as we work through iterations. Think of it as a persistent memory system that reminds Claude of what we&amp;rsquo;ve established works well and what doesn&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;On top of that, I use a series of prompts that remind Claude how I like it to code and constantly update its coding guidelines along the way. This isn&amp;rsquo;t just about syntax preferences—it&amp;rsquo;s about architectural patterns, error handling approaches, testing strategies, and documentation standards.&lt;/p&gt;
&lt;h2 id=&#34;the-quality-control-reality&#34;&gt;The Quality Control Reality&lt;/h2&gt;
&lt;p&gt;Recent research from 2024 shows why this structured approach matters. Studies found an 8-fold increase in duplicated code blocks when developers rely on AI assistance without proper review. Code churn rates have also increased dramatically, with much of the generated code being discarded shortly after creation.&lt;/p&gt;
&lt;p&gt;This isn&amp;rsquo;t an AI problem. It&amp;rsquo;s a process problem.&lt;/p&gt;
&lt;p&gt;When I work with Claude, here&amp;rsquo;s what actually happens:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I define the task with clear requirements&lt;/li&gt;
&lt;li&gt;Claude generates a detailed plan (not code yet)&lt;/li&gt;
&lt;li&gt;I review and refine the plan until it&amp;rsquo;s solid&lt;/li&gt;
&lt;li&gt;Claude executes the plan and generates code&lt;/li&gt;
&lt;li&gt;I review every line for logic, efficiency, and maintainability&lt;/li&gt;
&lt;li&gt;Claude runs Vibe Check validation throughout the process&lt;/li&gt;
&lt;li&gt;I provide specific feedback on improvements&lt;/li&gt;
&lt;li&gt;We iterate until the code meets my standards&lt;/li&gt;
&lt;li&gt;I run additional tests and refactoring passes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This isn&amp;rsquo;t faster because I&amp;rsquo;m cutting corners. It&amp;rsquo;s faster because I&amp;rsquo;m leveraging a tool that can generate solutions I might not have considered, then applying human judgment to refine them within a structured framework.&lt;/p&gt;
&lt;h2 id=&#34;the-productivity-paradox&#34;&gt;The Productivity Paradox&lt;/h2&gt;
&lt;p&gt;Research shows mixed results on AI coding productivity. Some studies report 26% gains for less experienced developers, while others show 19% decreases for experienced developers in complex scenarios.&lt;/p&gt;
&lt;p&gt;The key difference? How you use the tool.&lt;/p&gt;
&lt;p&gt;Less experienced developers benefit because they&amp;rsquo;re getting exposure to patterns and solutions they haven&amp;rsquo;t seen before. Experienced developers struggle when they try to use AI for complex, context-heavy tasks that require deep understanding of existing codebases.&lt;/p&gt;
&lt;p&gt;But when experienced developers use AI strategically—with proper planning phases, validation systems, and iterative refinement—the productivity gains are substantial.&lt;/p&gt;
&lt;p&gt;The strategic advantage isn&amp;rsquo;t just speed. It&amp;rsquo;s access to a broader knowledge base. I can ask Claude about obscure APIs, edge cases, or optimization techniques that I might not remember or know about. Then I can evaluate and adapt those suggestions based on my experience and requirements.&lt;/p&gt;
&lt;h2 id=&#34;beyond-set-and-forget&#34;&gt;Beyond Set-and-Forget&lt;/h2&gt;
&lt;p&gt;The &amp;ldquo;never set and forget&amp;rdquo; principle is crucial because it maintains the human element that makes code truly valuable.&lt;/p&gt;
&lt;p&gt;When I&amp;rsquo;m reviewing Claude-generated code, I&amp;rsquo;m looking for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logic errors and edge cases&lt;/li&gt;
&lt;li&gt;Performance optimizations&lt;/li&gt;
&lt;li&gt;Code readability and maintainability&lt;/li&gt;
&lt;li&gt;Integration with existing systems&lt;/li&gt;
&lt;li&gt;Security considerations&lt;/li&gt;
&lt;li&gt;Future extensibility&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The LLM might generate functionally correct code, but it doesn&amp;rsquo;t understand the broader context of your project, your team&amp;rsquo;s coding standards, or your long-term architectural goals.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s where the human comes in. I&amp;rsquo;m not just checking if the code works. I&amp;rsquo;m ensuring it works well within the larger system.&lt;/p&gt;
&lt;p&gt;The continuous prompting and guideline updates serve as a feedback loop. As we work through a project, Claude learns my specific preferences and patterns. But this learning is guided and validated by human oversight, not left to chance.&lt;/p&gt;
&lt;h2 id=&#34;the-future-of-developer-roles&#34;&gt;The Future of Developer Roles&lt;/h2&gt;
&lt;p&gt;This approach fundamentally changes what it means to be a developer. Instead of spending time on routine implementations, you&amp;rsquo;re focusing on architecture, design decisions, and quality assurance.&lt;/p&gt;
&lt;p&gt;You become the architect and the LLM becomes the builder. But architects don&amp;rsquo;t just hand over blueprints and disappear. They oversee construction, make adjustments, and ensure the final result meets specifications.&lt;/p&gt;
&lt;p&gt;This shift requires maintaining your technical skills and architectural thinking. You need to understand code deeply enough to evaluate what the LLM produces. You need to know good patterns from bad ones. You need to understand the trade-offs in different approaches.&lt;/p&gt;
&lt;p&gt;The developers who struggle with AI assistance are often those who try to use it as a replacement for their own knowledge rather than an amplifier of it.&lt;/p&gt;
&lt;h2 id=&#34;the-strategic-advantage&#34;&gt;The Strategic Advantage&lt;/h2&gt;
&lt;p&gt;When done right, vibe coding isn&amp;rsquo;t about lowering standards. It&amp;rsquo;s about raising them.&lt;/p&gt;
&lt;p&gt;Because you&amp;rsquo;re not bogged down in routine implementation details, you can focus more attention on code quality, system design, and user experience. You can explore more alternatives because the cost of prototyping is lower.&lt;/p&gt;
&lt;p&gt;You can also tackle more ambitious projects because you have a force multiplier for the routine parts of development.&lt;/p&gt;
&lt;p&gt;But this only works if you maintain rigorous standards for the output. The moment you start accepting &amp;ldquo;good enough&amp;rdquo; code because it was faster to generate, you&amp;rsquo;ve fallen into the trap that gives vibe coding a bad reputation.&lt;/p&gt;
&lt;h2 id=&#34;the-bottom-line&#34;&gt;The Bottom Line&lt;/h2&gt;
&lt;p&gt;Vibe coding isn&amp;rsquo;t about replacing human judgment with AI automation. It&amp;rsquo;s about strategic collaboration where AI handles routine tasks and pattern generation while humans provide oversight, refinement, and architectural guidance.&lt;/p&gt;
&lt;p&gt;The quality of your code depends on the quality of your review process, not the tool you use to generate it. Whether you&amp;rsquo;re working with an LLM or a junior developer, the principles remain the same: clear requirements, thorough review, iterative improvement, and unwavering standards.&lt;/p&gt;
&lt;p&gt;The developers who succeed with AI assistance are those who understand this distinction. They&amp;rsquo;re not looking for a replacement for their skills. They&amp;rsquo;re looking for a tool that amplifies their capabilities while maintaining their responsibility for the final product.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s what vibe coding really is. And when done right, it produces better code, not worse.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Links: The Bookmark Manager That Actually Saves Your Stuff</title>
      <link>https://alexanderkucera.com/2025/07/07/links-the-bookmark-manager-that.html</link>
      <pubDate>Mon, 07 Jul 2025 12:34:15 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/07/07/links-the-bookmark-manager-that.html</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve all been there. You bookmark something important. Come back weeks later, link is dead. Content vanished, site changed, paywall appeared. The frustration of digital amnesia strikes again.&lt;/p&gt;
&lt;p&gt;I got tired of losing things I wanted to keep.&lt;/p&gt;
&lt;h2 id=&#34;from-simple-idea-to-production-reality&#34;&gt;From Simple Idea to Production Reality&lt;/h2&gt;
&lt;p&gt;Links started as a basic bookmark manager. Just me, trying to organize my web finds. 115 commits later, it&amp;rsquo;s become a full archival system. The evolution from &amp;ldquo;nice to have&amp;rdquo; to &amp;ldquo;can&amp;rsquo;t live without&amp;rdquo; surprised even me.&lt;/p&gt;
&lt;p&gt;What began as simple URL storage grew into something much more powerful. Each commit taught me something new about what people actually need. Not just bookmarks - real preservation.&lt;/p&gt;
&lt;h2 id=&#34;the-mobile-revolution-&#34;&gt;The Mobile Revolution 📱&lt;/h2&gt;
&lt;p&gt;The game-changer was iOS Shortcuts integration. Now I can share from anywhere, archive automatically. Subway reading? One tap saves it. Meeting discovery? Boom, archived. Social media find? Got it.&lt;/p&gt;
&lt;p&gt;The technical magic happens in two phases. You get instant feedback when you tap &amp;ldquo;Share to Links.&amp;rdquo; Meanwhile, the system spends 5-10 seconds downloading content. Background processing creates multiple archive formats. AI generates summaries. All while you move on with your day.&lt;/p&gt;
&lt;p&gt;No more &amp;ldquo;I&amp;rsquo;ll save this later&amp;rdquo; mental notes. Just save it now, from wherever you are.&lt;/p&gt;
&lt;h2 id=&#34;smart-archiving-made-simple&#34;&gt;Smart Archiving Made Simple&lt;/h2&gt;
&lt;p&gt;Links doesn&amp;rsquo;t just store URLs. It understands content. AI summaries using Claude (with OpenAI fallback) extract meaning from every page. Content extraction that actually works handles even tricky sites.&lt;/p&gt;
&lt;p&gt;Multiple formats ensure long-term access:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PDF archives preserve visual layout&lt;/li&gt;
&lt;li&gt;Markdown conversion creates searchable text&lt;/li&gt;
&lt;li&gt;WARC files maintain complete page context&lt;/li&gt;
&lt;li&gt;Structured metadata enables programmatic access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full-text search works across all archived content. Find that thing you saved months ago in seconds.&lt;/p&gt;
&lt;p&gt;The system handles edge cases gracefully. Broken sites, missing metadata, failed AI calls - it all degrades nicely. You never lose your bookmark, even when things go wrong.&lt;/p&gt;
&lt;h2 id=&#34;how-links-stands-apart&#34;&gt;How Links Stands Apart&lt;/h2&gt;
&lt;p&gt;The bookmark manager landscape is crowded. But Links takes a different approach than the competition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mymind.com&lt;/strong&gt; uses AI for visual organization and discovery. Beautiful interface, smart tagging, visual search. But it&amp;rsquo;s cloud-hosted, subscription-based, and focused on organization over preservation. When mymind&amp;rsquo;s servers go down, your bookmarks go with them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dewey&lt;/strong&gt; captures content at bookmark time. Great for preservation, but limited mobile integration. &lt;strong&gt;Raindrop.io&lt;/strong&gt; offers visual bookmarking with cloud backup. &lt;strong&gt;LinkAce&lt;/strong&gt; provides self-hosted monitoring with Internet Archive integration.&lt;/p&gt;
&lt;p&gt;Links combines the best ideas while avoiding common pitfalls:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File-based storage&lt;/strong&gt; (no database headaches)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-hosted control&lt;/strong&gt; (your data, your rules)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Actual content preservation&lt;/strong&gt; (not just pretty organization)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seamless mobile integration&lt;/strong&gt; (because that&amp;rsquo;s where we live now)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI intelligence&lt;/strong&gt; (without the subscription fees)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While others focus on tags, categories, and visual discovery, Links focuses on one thing: making sure your stuff doesn&amp;rsquo;t disappear.&lt;/p&gt;
&lt;h2 id=&#34;the-long-term-vision&#34;&gt;The Long-Term Vision&lt;/h2&gt;
&lt;p&gt;Digital preservation shouldn&amp;rsquo;t be complicated. Regular people need tools that work without constant maintenance. Links embraces this philosophy.&lt;/p&gt;
&lt;p&gt;In an era where websites vanish overnight, Links provides a personal solution. No tags, no categories, no complex workflows. Just chronological organization that makes sense. And yet, everything is still just one full-text search away.&lt;/p&gt;
&lt;p&gt;Your data lives in human-readable files. No vendor lock-in, no proprietary formats. If you want to move elsewhere, everything exports cleanly.&lt;/p&gt;
&lt;p&gt;This is digital preservation for the rest of us.&lt;/p&gt;
&lt;h2 id=&#34;ready-to-use-today&#34;&gt;Ready to Use Today&lt;/h2&gt;
&lt;p&gt;Links is production-ready right now. All core features work reliably. The mobile integration is smooth. The AI summaries are helpful. The search actually finds things.&lt;/p&gt;
&lt;p&gt;After 115 commits of refinement, it&amp;rsquo;s almost ready for prime time. I still need to bundle it up for distribution.&lt;/p&gt;
&lt;p&gt;Until then, you can try Links at &lt;a href=&#34;https://links.alexanderkucera.de&#34;&gt;links.alexanderkucera.de&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Links is open source and self-hostable. Built with Kirby CMS, Python archiving scripts, and a healthy dose of frustration with disappearing content.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/30/one-of-the-things-that.html</link>
      <pubDate>Mon, 30 Jun 2025 17:05:50 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/30/one-of-the-things-that.html</guid>
      <description>&lt;p&gt;One of the things that annoys me me most about LLMs is that they ruined properly crafted typography. I love to use em dashes. I feel like it shows that I put thought &amp;amp; care into a text. Well, not anymore. Now it says „hey that dude used an AI to write this. Feel free to discard it as not original.“&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/22/i-finally-caved-and-paid.html</link>
      <pubDate>Sun, 22 Jun 2025 19:38:43 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/22/i-finally-caved-and-paid.html</guid>
      <description>&lt;p&gt;I finally caved and paid for a month of Claude Pro for the work on my iPad app. It should come out cheaper then using API calls for vibe coding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/21/daring-fireball-seven-replies-to.html</link>
      <pubDate>Sat, 21 Jun 2025 14:08:13 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/21/daring-fireball-seven-replies-to.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://daringfireball.net/linked/2025/06/17/seven-replies-to-the-viral-apple-reasoning-paper&#34;&gt;Daring Fireball: Seven Replies to the Viral Apple Reasoning Paper&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[…] when it comes to these systems [LLMs], I’m mostly just interested in whether they’re useful or not, and if so, how.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That feels very short sighted. If we don‘t solve the alignment problem now, it will be too late when we do get to AGIs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/17/on-the-one-hand-i.html</link>
      <pubDate>Tue, 17 Jun 2025 21:48:06 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/17/on-the-one-hand-i.html</guid>
      <description>&lt;p&gt;On the one hand I believe AI has the potential to end humanity. On the other hand there is Audible which just recommended me the same book I just finished „based on my listening habits“. Well done robot overlords.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/17/and-finally-read-this-ai.html</link>
      <pubDate>Tue, 17 Jun 2025 13:41:39 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/17/and-finally-read-this-ai.html</guid>
      <description>&lt;p&gt;And finally read this: &lt;a href=&#34;https://ai-2027.com/&#34;&gt;AI 2027&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/17/then-listen-to-this-countdown.html</link>
      <pubDate>Tue, 17 Jun 2025 13:40:49 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/17/then-listen-to-this-countdown.html</guid>
      <description>&lt;p&gt;Then listen to this: &lt;a href=&#34;https://overcast.fm/+AAKhqGBgbmQ&#34;&gt;Countdown to Superintelligence&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/17/everyone-should-probably-watch-this.html</link>
      <pubDate>Tue, 17 Jun 2025 13:38:45 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/17/everyone-should-probably-watch-this.html</guid>
      <description>&lt;p&gt;Everyone should probably watch this:
&lt;a href=&#34;https://youtu.be/giT0ytynSqg?si=b76IFnaFT4HiyWPJ&#34;&gt;The Godfather of AI: I tried to warn them, but we‘ve already lost control&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://alexanderkucera.com/2025/06/14/meta-aiapp-stellt-private-unterhaltungen.html</link>
      <pubDate>Sat, 14 Jun 2025 08:25:36 +0200</pubDate>
      
      <guid>http://AlexKucera.micro.blog/2025/06/14/meta-aiapp-stellt-private-unterhaltungen.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.perplexity.ai/page/meta-ai-app-exposes-private-co-bNcRzv3wTWq9L7KfuJtb.g&#34;&gt;Meta AI-App stellt private Unterhaltungen im öffentlichen Feed dar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Well done Meta. Once again trampling all over users privacy. Just like we know you.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>